--- a/net/minecraft/world/level/storage/LevelStorageSource.java
+++ b/net/minecraft/world/level/storage/LevelStorageSource.java
@@ -70,6 +_,7 @@
 import net.minecraft.world.level.validation.DirectoryValidator;
 import net.minecraft.world.level.validation.ForbiddenSymlinkInfo;
 import net.minecraft.world.level.validation.PathAllowList;
+import net.minecraftforge.common.ForgeHooks;
 import org.slf4j.Logger;
 
 public class LevelStorageSource {
@@ -247,6 +_,7 @@
          WorldDimensions.Complete worlddimensions$complete = worldgensettings.f_64605_().m_245300_(p_249363_);
          Lifecycle lifecycle = worlddimensions$complete.m_245945_().add(p_251214_);
          PrimaryLevelData primaryleveldata = PrimaryLevelData.m_78530_(dynamic, p_265021_, i, compoundtag2, levelsettings, levelversion, worlddimensions$complete.f_244634_(), worldgensettings.f_243992_(), lifecycle);
+         primaryleveldata.pdc = compoundtag1.m_128423_("BukkitValues"); // CraftBukkit - Add PDC to world
          return Pair.of(primaryleveldata, worlddimensions$complete);
       };
    }
@@ -343,15 +_,48 @@
       }
    }
 
+   public LevelStorageSource.LevelStorageAccess validateAndCreateAccess(String s, ResourceKey<LevelStem> dimensionType) throws IOException, ContentValidationException { // CraftBukkit
+      Path path = this.m_289874_(s);
+      List<ForbiddenSymlinkInfo> list = this.f_289816_.m_289885_(path, true);
+
+      if (!list.isEmpty()) {
+         throw new ContentValidationException(path, list);
+      } else {
+         return new LevelStorageSource.LevelStorageAccess(s, path, dimensionType); // CraftBukkit
+      }
+   }
+
    public LevelStorageSource.LevelStorageAccess m_78260_(String p_78261_) throws IOException {
       Path path = this.m_289874_(p_78261_);
       return new LevelStorageSource.LevelStorageAccess(p_78261_, path);
    }
 
+   // CraftBukkit start
+   public LevelStorageSource.LevelStorageAccess createAccess(String s, ResourceKey<LevelStem> dimensionType) throws IOException {
+      Path path = this.m_289874_(s);
+
+      return new LevelStorageAccess(s, path, dimensionType);
+   }
+   // CraftBukkit end
+
    public DirectoryValidator m_289863_() {
       return this.f_289816_;
    }
 
+   // CraftBukkit start
+   public static Path getStorageFolder(Path path, ResourceKey<LevelStem> dimensionType) {
+      if (dimensionType == LevelStem.f_63971_) {
+         return path;
+      } else if (dimensionType == LevelStem.f_63972_) {
+         return path.resolve("DIM-1");
+      } else if (dimensionType == LevelStem.f_63973_) {
+         return path.resolve("DIM1");
+      } else {
+         return path.resolve("dimensions").resolve(dimensionType.m_135782_().m_135827_()).resolve(dimensionType.m_135782_().m_135815_());
+      }
+   }
+   // CraftBukkit end
+
    public static record LevelCandidates(List<LevelStorageSource.LevelDirectory> f_230840_) implements Iterable<LevelStorageSource.LevelDirectory> {
       public boolean m_230843_() {
          return this.f_230840_.isEmpty();
@@ -394,15 +_,31 @@
 
    public class LevelStorageAccess implements AutoCloseable {
       final DirectoryLock f_78270_;
-      final LevelStorageSource.LevelDirectory f_230867_;
+      public final LevelStorageSource.LevelDirectory f_230867_;
       private final String f_78272_;
       private final Map<LevelResource, Path> f_78273_ = Maps.newHashMap();
+      public ResourceKey<LevelStem> dimensionType;
 
-      LevelStorageAccess(String p_289967_, Path p_289988_) throws IOException {
+      public LevelStorageAccess(String p_289967_, Path p_289988_) throws IOException {
          this.f_78272_ = p_289967_;
          this.f_230867_ = new LevelStorageSource.LevelDirectory(p_289988_);
          this.f_78270_ = DirectoryLock.m_13640_(p_289988_);
-      }
+         this.dimensionType = null;
+      }
+
+      public LevelStorageAccess(String s, Path path, ResourceKey<LevelStem> dimensionType) throws IOException {
+         this.dimensionType = dimensionType;
+         // CraftBukkit end
+         this.f_78272_ = s;
+         this.f_230867_ = new LevelStorageSource.LevelDirectory(path);
+         this.f_78270_ = DirectoryLock.m_13640_(path);
+      }
+
+      // Mohist start
+      public void setTypeKey(ResourceKey<LevelStem> dimensionType) {
+         this.dimensionType = dimensionType;
+      }
+      // Mohist end
 
       public String m_78277_() {
          return this.f_78272_;
@@ -413,7 +_,7 @@
       }
 
       public Path m_197394_(ResourceKey<Level> p_197395_) {
-         return DimensionType.m_196975_(p_197395_, this.f_230867_.f_230850_());
+         return dimensionType != null ? LevelStorageSource.getStorageFolder(this.f_230867_.f_230850_(), this.dimensionType) : DimensionType.m_196975_(p_197395_, this.f_230867_.f_230850_());
       }
 
       private void m_78313_() {
@@ -439,6 +_,19 @@
          return LevelStorageSource.this.m_230817_(this.f_230867_, LevelStorageSource.m_245503_(p_248747_, p_251873_, p_249187_, p_249736_));
       }
 
+      public void readAdditionalLevelSaveData() {
+         m_78313_();
+         LevelStorageSource.this.m_230817_(this.f_230867_, (path, dataFixer) -> {
+            try {
+               CompoundTag compoundTag = NbtIo.m_128937_(path.toFile());
+               ForgeHooks.readAdditionalLevelSaveData(compoundTag, this.f_230867_);
+            } catch (Exception e) {
+                f_78191_.error("Exception reading {}", path, e);
+            }
+            return ""; // Return non-null to prevent level.dat-old inject
+         });
+      }
+
       @Nullable
       public WorldDataConfiguration m_247706_() {
          this.m_78313_();
@@ -455,6 +_,8 @@
          CompoundTag compoundtag1 = new CompoundTag();
          compoundtag1.m_128365_("Data", compoundtag);
 
+         ForgeHooks.writeAdditionalLevelSaveData(p_78292_, compoundtag1);
+
          try {
             File file2 = File.createTempFile("level", ".dat", file1);
             NbtIo.m_128944_(compoundtag1, file2);
@@ -469,6 +_,10 @@
 
       public Optional<Path> m_182514_() {
          return !this.f_78270_.m_13639_() ? Optional.empty() : Optional.of(this.f_230867_.m_230860_());
+      }
+
+      public Path getWorldDir() {
+         return f_78194_;
       }
 
       public void m_78311_() throws IOException {
