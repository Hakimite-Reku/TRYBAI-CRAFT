--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -2,12 +_,14 @@
 
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Sets;
+import com.mohistmc.plugins.world.utils.ConfigByWorlds;
 import com.mojang.datafixers.DataFixer;
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
 import com.mojang.serialization.DynamicOps;
 import com.mojang.serialization.Lifecycle;
+
 import java.util.HashSet;
 import java.util.Set;
 import java.util.UUID;
@@ -17,6 +_,7 @@
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.core.UUIDUtil;
 import net.minecraft.nbt.CompoundTag;
@@ -25,8 +_,11 @@
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.nbt.StringTag;
 import net.minecraft.nbt.Tag;
+import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
 import net.minecraft.resources.RegistryOps;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.level.GameRules;
@@ -35,11 +_,15 @@
 import net.minecraft.world.level.LevelSettings;
 import net.minecraft.world.level.WorldDataConfiguration;
 import net.minecraft.world.level.border.WorldBorder;
+import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.dimension.end.EndDragonFight;
 import net.minecraft.world.level.levelgen.WorldGenSettings;
 import net.minecraft.world.level.levelgen.WorldOptions;
 import net.minecraft.world.level.timers.TimerCallbacks;
 import net.minecraft.world.level.timers.TimerQueue;
+import org.bukkit.Bukkit;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
 import org.slf4j.Logger;
 
 public class PrimaryLevelData implements ServerLevelData, WorldData {
@@ -82,6 +_,22 @@
    private boolean f_78440_;
    private final Set<String> f_276525_;
    private final TimerQueue<MinecraftServer> f_78441_;
+   private boolean confirmedExperimentalWarning = false;
+
+   // CraftBukkit start - Add world and pdc
+   public Registry<LevelStem> customDimensions;
+   private ServerLevel world;
+   protected Tag pdc;
+
+   public void setWorld(ServerLevel world) {
+      if (this.world != null) {
+         return;
+      }
+      this.world = world;
+      world.getWorld().readBukkitValues(pdc);
+      pdc = null;
+   }
+   // CraftBukkit end
 
    private PrimaryLevelData(@Nullable DataFixer p_277859_, int p_277672_, @Nullable CompoundTag p_277888_, boolean p_278109_, int p_277714_, int p_278088_, int p_278037_, float p_277542_, long p_277414_, long p_277635_, int p_277595_, int p_277794_, int p_278007_, boolean p_277943_, int p_277674_, boolean p_277644_, boolean p_277749_, boolean p_278004_, WorldBorder.Settings p_277729_, int p_277856_, int p_278051_, @Nullable UUID p_277341_, Set<String> p_277989_, Set<String> p_277399_, TimerQueue<MinecraftServer> p_277860_, @Nullable CompoundTag p_277936_, EndDragonFight.Data p_289764_, LevelSettings p_278064_, WorldOptions p_278072_, PrimaryLevelData.SpecialWorldProperty p_277548_, Lifecycle p_277915_) {
       this.f_78452_ = p_277859_;
@@ -127,7 +_,7 @@
          return p_78529_.asString().result().stream();
       }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), p_78531_.get("removed_features").asStream().flatMap((p_277335_) -> {
          return p_277335_.asString().result().stream();
-      }).collect(Collectors.toSet()), new TimerQueue<>(TimerCallbacks.f_82226_, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), p_78531_.get("DragonFight").read(EndDragonFight.Data.f_289707_).resultOrPartial(f_78442_::error).orElse(EndDragonFight.Data.f_289709_), p_78535_, p_251864_, p_250651_, p_78538_);
+      }).collect(Collectors.toSet()), new TimerQueue<>(TimerCallbacks.f_82226_, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), p_78531_.get("DragonFight").read(EndDragonFight.Data.f_289707_).resultOrPartial(f_78442_::error).orElse(EndDragonFight.Data.f_289709_), p_78535_, p_251864_, p_250651_, p_78538_).withConfirmedWarning(p_78538_ != Lifecycle.stable() && p_78531_.get("confirmedExperimentalSettings").asBoolean(false));
    }
 
    public CompoundTag m_6626_(RegistryAccess p_78543_, @Nullable CompoundTag p_78544_) {
@@ -178,7 +_,7 @@
       p_78547_.m_128379_("allowCommands", this.f_78443_.m_46932_());
       p_78547_.m_128379_("initialized", this.f_78462_);
       this.f_78464_.m_62040_(p_78547_);
-      p_78547_.m_128344_("Difficulty", (byte)this.f_78443_.m_46931_().m_19028_());
+      p_78547_.m_128344_("Difficulty", (byte) this.f_78443_.m_46931_().m_19028_());
       p_78547_.m_128379_("DifficultyLocked", this.f_78463_);
       p_78547_.m_128365_("GameRules", this.f_78443_.m_46933_().m_46163_());
       p_78547_.m_128365_("DragonFight", Util.m_260975_(EndDragonFight.Data.f_289707_.encodeStart(NbtOps.f_128958_, this.f_78465_), IllegalStateException::new));
@@ -188,9 +_,9 @@
 
       DataResult<Tag> dataresult = WorldDataConfiguration.f_244621_.encodeStart(NbtOps.f_128958_, this.f_78443_.m_246291_());
       dataresult.get().ifLeft((p_248505_) -> {
-         p_78547_.m_128391_((CompoundTag)p_248505_);
+         p_78547_.m_128391_((CompoundTag) p_248505_);
       }).ifRight((p_248506_) -> {
-         f_78442_.warn("Failed to encode configuration {}", (Object)p_248506_.message());
+         f_78442_.warn("Failed to encode configuration {}", (Object) p_248506_.message());
       });
       if (this.f_78466_ != null) {
          p_78547_.m_128365_("CustomBossEvents", this.f_78466_);
@@ -203,6 +_,14 @@
          p_78547_.m_128362_("WanderingTraderId", this.f_78438_);
       }
 
+      p_78547_.m_128359_("forgeLifecycle", net.minecraftforge.common.ForgeHooks.encodeLifecycle(this.f_78443_.getLifecycle()));
+      p_78547_.m_128379_("confirmedExperimentalSettings", this.confirmedExperimentalWarning);
+
+      if (Bukkit.getServer() != null && world != null) {
+         p_78547_.m_128359_("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
+         world.getWorld().storeBukkitValues(p_78547_); // CraftBukkit - add pdc
+      }
+
    }
 
    private static ListTag m_277055_(Set<String> p_277880_) {
@@ -306,6 +_,20 @@
    }
 
    public void m_5557_(boolean p_78562_) {
+      // CraftBukkit start
+      if (this.f_78460_ == p_78562_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(m_5462_());
+      if (world != null) {
+         ThunderChangeEvent thunder = new ThunderChangeEvent(world, p_78562_);
+         Bukkit.getServer().getPluginManager().callEvent(thunder);
+         if (thunder.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.f_78460_ = p_78562_;
    }
 
@@ -322,6 +_,20 @@
    }
 
    public void m_5565_(boolean p_78576_) {
+      // CraftBukkit start
+      if (this.f_78458_ == p_78576_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(m_5462_());
+      if (world != null) {
+         WeatherChangeEvent weather = new WeatherChangeEvent(world, p_78576_);
+         Bukkit.getServer().getPluginManager().callEvent(weather);
+         if (weather.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.f_78458_ = p_78576_;
    }
 
@@ -375,6 +_,13 @@
 
    public void m_6166_(Difficulty p_78521_) {
       this.f_78443_ = this.f_78443_.m_46918_(p_78521_);
+      ConfigByWorlds.difficulty(m_5462_(), p_78521_.name());
+      // CraftBukkit start
+      ClientboundChangeDifficultyPacket packet = new ClientboundChangeDifficultyPacket(this.m_5472_(), this.m_5474_());
+      for (ServerPlayer player : world.m_6907_()) {
+         player.f_8906_.m_9829_(packet);
+      }
+      // CraftBukkit end
    }
 
    public boolean m_5474_() {
@@ -485,6 +_,15 @@
       return this.f_78443_.m_46935_();
    }
 
+   public boolean hasConfirmedExperimentalWarning() {
+      return this.confirmedExperimentalWarning;
+   }
+
+   public PrimaryLevelData withConfirmedWarning(boolean confirmedWarning) { // Builder-like to not patch ctor
+      this.confirmedExperimentalWarning = confirmedWarning;
+      return this;
+   }
+
    /** @deprecated */
    @Deprecated
    public static enum SpecialWorldProperty {
@@ -492,4 +_,12 @@
       FLAT,
       DEBUG;
    }
+
+   // CraftBukkit start - Check if the name stored in NBT is the correct one
+   public void checkName(String name) {
+      if (!this.f_78443_.f_46902_.equals(name)) {
+         this.f_78443_.f_46902_ = name;
+      }
+   }
+   // CraftBukkit end
 }
