--- a/net/minecraft/Util.java
+++ b/net/minecraft/Util.java
@@ -171,6 +_,11 @@
       return 255;
    }
 
+   // We add these inner classes to compensate for Mojang's missing inner classes and shift the anonymous class index.
+   // This allows us to obfuscate subsequent anonymous inner classes correctly.
+   @SuppressWarnings("unused") private static java.util.function.LongSupplier INNER_CLASS_SHIFT1 = new java.util.function.LongSupplier() { public long getAsLong() { return 0; } };
+   @SuppressWarnings("unused") private static java.util.function.LongSupplier INNER_CLASS_SHIFT2 = new java.util.function.LongSupplier() { public long getAsLong() { return 0; } };
+
    public static ExecutorService m_183991_() {
       return f_137444_;
    }
@@ -239,7 +_,7 @@
       try {
          type = DataFixers.m_14512_().getSchema(DataFixUtils.makeKey(SharedConstants.m_183709_().m_183476_().m_193006_())).getChoiceType(p_137552_, p_137553_);
       } catch (IllegalArgumentException illegalargumentexception) {
-         f_137446_.error("No data fixer registered for {}", (Object)p_137553_);
+         f_137446_.debug("No data fixer registered for {}", (Object)p_137553_);
          if (SharedConstants.f_136183_) {
             throw illegalargumentexception;
          }
@@ -428,7 +_,7 @@
    }
 
    public static void m_143785_(String p_143786_) {
-      f_137446_.error(p_143786_);
+      // LOGGER.error(p_143786_);
       if (SharedConstants.f_136183_) {
          m_183984_(p_143786_);
       }
@@ -436,7 +_,7 @@
    }
 
    public static void m_200890_(String p_200891_, Throwable p_200892_) {
-      f_137446_.error(p_200891_, p_200892_);
+      // LOGGER.error(p_200891_, p_200892_);
       if (SharedConstants.f_136183_) {
          m_183984_(p_200891_);
       }
@@ -445,7 +_,7 @@
 
    public static <T extends Throwable> T m_137570_(T p_137571_) {
       if (SharedConstants.f_136183_) {
-         f_137446_.error("Trying to throw a fatal exception, pausing in IDE", p_137571_);
+         // LOGGER.error("Trying to throw a fatal exception, pausing in IDE", p_137571_);
          m_183984_(p_137571_.getMessage());
       }
 
@@ -458,7 +_,7 @@
 
    private static void m_183984_(String p_183985_) {
       Instant instant = Instant.now();
-      f_137446_.warn("Did you remember to set a breakpoint here?");
+      // LOGGER.warn("Did you remember to set a breakpoint here?");
       boolean flag = Duration.between(instant, Instant.now()).toMillis() > 500L;
       if (!flag) {
          f_183937_.accept(p_183985_);
